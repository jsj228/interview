1.HTTP 强制缓存和协商缓存 https://www.cnblogs.com/cckui/p/11506514.html
    Response Headers中的 cache-control字段
        cache-control: max-age=xxxx，public
        客户端和代理服务器都可以缓存该资源；
        客户端在xxx秒的有效期内，如果有请求该资源的需求的话就直接读取缓存, statu code: 200
        如果用户做了刷新操作，就向服务器发起http请求
        cache-control: max-age=xxxx，private
        只允许客户端可以缓存该资源；代理服务器不允许缓存
        客户端在xxx秒内直接读取缓存, statu code: 200
        cache-control: max-age=xxxx，immutable
        客户端在xxx秒的有效期内，如果有请求该资源的需求的话就直接读取缓存, statu code:200
        即使用户做了刷新操作，也不向服务器发起http请求
        cache-control: no-cache
        跳过设置强缓存，但是不妨碍设置协商缓存；一般如果你做了强缓存，只有在强缓存失效了才走协商缓存的，设置了no-cache就不会走强缓存了，每次请求都回询问服务端。
        cache-control: no-store
        不缓存，这个会让客户端、服务器都不缓存，也就没有所谓的强缓存、协商缓存了。
    强制缓存：不会向服务器发送请求，直接从缓存中读取资源，请求返回状态码为 200 ;
        服务端会在Response Headers 中的 cache-control 对缓存时间、缓存方式等进行定义
         Response Headers  ->  Cache-Control:no-cache,no-store,must-revalidate
    协商缓存：
        max-age=0, private, must-revalidate
        
